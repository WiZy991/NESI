'use client'

import { useParams, useRouter } from 'next/navigation'
import { useEffect, useState } from 'react'
import LoadingSpinner from '@/components/LoadingSpinner'
import Link from 'next/link'

export default function HireDetailsPage() {
  const { id } = useParams()
  const router = useRouter()
  const [hire, setHire] = useState<any>(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)

  useEffect(() => {
    const fetchData = async () => {
      try {
        const res = await fetch(`/api/hire/${id}`, {
          credentials: 'include',
        })
        const data = await res.json()
        if (!res.ok) throw new Error(data?.error || '–û—à–∏–±–∫–∞')
        setHire(data)
      } catch (err: any) {
        setError(err.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏')
      } finally {
        setLoading(false)
      }
    }

    fetchData()
  }, [id])

  if (loading) return <LoadingSpinner />
  if (error) return <p className="text-red-500">{error}</p>
  if (!hire) return <p>–ó–∞–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω</p>

  const handleAction = async (action: 'accept' | 'reject') => {
    try {
      const res = await fetch(`/api/hire/${id}`, {
        method: 'PATCH',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ action }),
      })

      if (!res.ok) {
        const err = await res.json().catch(() => null)
        alert(err?.error || '–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è')
        return
      }

      // üîÑ –æ–±–Ω–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ
      router.refresh()

      // ‚úÖ –ï—Å–ª–∏ –ø—Ä–∏–Ω—è–ª–∏ ‚Äî –ø–µ—Ä–µ—Ö–æ–¥–∏–º —Å—Ä–∞–∑—É –≤ —á–∞—Ç
      if (action === 'accept' && hire?.customer?.id) {
        router.push(`/chats?open=${hire.customer.id}`)
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞', err)
      alert('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞')
    }
  }

  return (
    <div className="max-w-2xl mx-auto py-8 px-4 text-white space-y-4">
      <h1 className="text-2xl font-bold text-emerald-400">
        –ó–∞–ø—Ä–æ—Å –æ—Ç {hire.customer?.fullName || '‚Äî'}
      </h1>

      <p><b>–î–∞—Ç–∞:</b> {new Date(hire.createdAt).toLocaleString()}</p>
      <p><b>–°—Ç–∞—Ç—É—Å:</b> {hire.status}</p>
      <p><b>–û–ø–ª–∞—á–µ–Ω:</b> {hire.paid ? '–î–∞' : '–ù–µ—Ç'}</p>

      {hire.status === 'accepted' && (
        <p className="text-green-400">
          ‚úÖ –í—ã –ø—Ä–∏–Ω—è–ª–∏ –∑–∞–ø—Ä–æ—Å.{' '}
          <Link
            href={`/chats?open=${hire.customer.id}`}
            className="underline text-emerald-300 hover:text-emerald-200"
          >
            –ü–µ—Ä–µ–π—Ç–∏ –≤ —á–∞—Ç
          </Link>
        </p>
      )}

      {hire.status === 'pending' && (
        <div className="flex gap-3 mt-4">
          <button
            className="px-4 py-2 bg-green-600 hover:bg-green-700 rounded-lg"
            onClick={() => handleAction('accept')}
          >
            –ü—Ä–∏–Ω—è—Ç—å
          </button>
          <button
            className="px-4 py-2 bg-red-600 hover:bg-red-700 rounded-lg"
            onClick={() => handleAction('reject')}
          >
            –û—Ç–∫–ª–æ–Ω–∏—Ç—å
          </button>
        </div>
      )}

      {hire.status === 'rejected' && (
        <p className="text-red-400">‚ùå –ó–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω–µ–Ω.</p>
      )}
    </div>
  )
}
