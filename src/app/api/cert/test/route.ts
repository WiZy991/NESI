import { NextResponse } from 'next/server'
import prisma from '@/lib/prisma'
import { getUserFromRequest } from '@/lib/auth'

function pickRandom<T>(arr: T[], take: number): T[] {
  const a = [...arr]
  for (let i = a.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1))
    ;[a[i], a[j]] = [a[j], a[i]]
  }
  return a.slice(0, take)
} // ← убрал лишний символ после скобки

export async function GET(req: Request) {
  try {
    const user = await getUserFromRequest(req)
    if (!user) return NextResponse.json({ error: 'Не авторизован' }, { status: 401 })

    const { searchParams } = new URL(req.url)
    const subcategoryId = searchParams.get('subcategoryId')
    const force = searchParams.get('force') === 'true'
    if (!subcategoryId) {
      return NextResponse.json({ error: 'subcategoryId обязателен' }, { status: 400 })
    }

    const sub = await prisma.subcategory.findUnique({ where: { id: subcategoryId } })
    if (!sub) return NextResponse.json({ error: 'Подкатегория не найдена' }, { status: 404 })

    const pool = getQuestionsForSubcategory(sub.name)
    const DESIRED_PER_ATTEMPT = 10

    let test = await prisma.certificationTest.findFirst({
      where: { subcategoryId },
      include: { questions: { include: { options: true } } },
    })

    const mustRecreate =
      force || !test || (test.questions?.length ?? 0) < DESIRED_PER_ATTEMPT

    if (mustRecreate) {
      if (!pool.length) {
        return NextResponse.json({ error: 'Для подкатегории не задан пул вопросов' }, { status: 404 })
      }

      // берём ровно нужное количество вопросов
      const selectedPool = pickRandom(pool, DESIRED_PER_ATTEMPT)

      // всё — в одной транзакции и ТОЛЬКО через tx.*
      await prisma.$transaction(async (tx) => {
        let current = await tx.certificationTest.findFirst({ where: { subcategoryId } })

        if (!current) {
          current = await tx.certificationTest.create({
            data: {
              subcategoryId,
              title: `Сертификация: ${sub.name}`,
              timeLimitSec: 600,
              passScore: 80,
              questionCount: selectedPool.length,
            },
          })
        } else {
          // вычищаем старые вопросы/опции/попытки
          await tx.certificationOption.deleteMany({ where: { question: { testId: current.id } } })
          await tx.certificationQuestion.deleteMany({ where: { testId: current.id } })
          await tx.certificationAttempt.deleteMany({ where: { testId: current.id } })
          await tx.certificationTest.update({
            where: { id: current.id },
            data: {
              title: `Сертификация: ${sub.name}`,
              timeLimitSec: 600,
              passScore: 80,
              questionCount: selectedPool.length,
              updatedAt: new Date(),
            },
          })
        }

        for (const q of selectedPool) {
          const createdQ = await tx.certificationQuestion.create({
            data: { testId: current.id, text: q.text },
          })

          await tx.certificationOption.createMany({
            data: q.options.map((opt: { text: string; isCorrect: boolean }) => ({
              questionId: createdQ.id,
              text: opt.text,
              isCorrect: !!opt.isCorrect,
            })),
          })
        }
      })

      // перечитываем тест после транзакции
      test = await prisma.certificationTest.findFirst({
        where: { subcategoryId },
        include: { questions: { include: { options: true } } },
      })
    }

    if (!test || !test.questions.length) {
      return NextResponse.json({ error: 'Тест или вопросы не найдены' }, { status: 404 })
    }

    const take = Math.min(test.questionCount, test.questions.length)
    const selected = pickRandom(test.questions, take)

    const safeQuestions = selected.map((q) => ({
      id: q.id,
      text: q.text,
      options: q.options.map((o) => ({ id: o.id, text: o.text })),
    }))

    return NextResponse.json({
      test: {
        id: test.id,
        title: test.title,
        timeLimitSec: test.timeLimitSec,
        passScore: test.passScore,
        questionCount: take,
      },
      questions: safeQuestions,
    })
  } catch (e) {
    console.error('GET /api/cert/test error:', e)
    return NextResponse.json({ error: 'Ошибка сервера' }, { status: 500 })
  }
}

/* =========================
   Пулы вопросов (как у тебя)
   ========================= */
function getQuestionsForSubcategory(name: string) {
  const q = (text: string, options: string[], correctIndex: number) => ({
    text,
    options: options.map((opt, i) => ({ text: opt, isCorrect: i === correctIndex })),
  })

  switch (name.trim().toLowerCase()) {
    case 'frontend':
      return [
        q('Что такое DOM?', ['Документ-объектная модель', 'Динамическая очередь', 'Протокол обмена'], 0),
        q('Для чего используется Flexbox?', ['Создание адаптивных изображений', 'Позиционирование и выравнивание элементов', 'Обработка форм'], 1),
        q('Какой тег используется для создания ссылки в HTML?', ['<div>', '<a>', '<link>'], 1),
        q('Что такое React?', ['Библиотека для UI', 'СУБД', 'Фреймворк для backend'], 0),
        q('Для чего используется CSS Grid?', ['Управление данными', 'Создание сетки на странице', 'Запросы к серверу'], 1),
        q('Что такое SPA?', ['Серверная архитектура', 'Одностраничное приложение', 'Спецификация HTML'], 1),
        q('Какой атрибут указывает путь к изображению в <img>?', ['src', 'href', 'alt'], 0),
        q('Что делает метод addEventListener?', ['Добавляет класс к элементу', 'Добавляет обработчик события', 'Создаёт новый элемент'], 1),
        q('Что такое компонент в React?', ['Стили', 'HTML-шаблон', 'Переиспользуемый блок интерфейса'], 2),
        q('Какой метод используется для изменения состояния в React?', ['setState', 'updateValue', 'modifyData'], 0),
        q('Что такое JSX?', ['Тип данных', 'Расширение синтаксиса JavaScript для HTML', 'CSS-препроцессор'], 1),
        q('Что делает тег <form>?', ['Определяет таблицу', 'Создаёт форму для ввода', 'Добавляет кнопку'], 1),
        q('Какой тег используется для таблиц?', ['<table>', '<tr>', '<form>'], 0),
        q('Какой псевдокласс используется при наведении?', [':hover', ':active', ':focus'], 0),
        q('Что такое media query?', ['HTML-тег', 'CSS-правило для адаптива', 'JS-функция'], 1),
        q('Что такое event bubbling?', ['Объединение событий', 'Всплытие событий вверх по DOM', 'Событие загрузки'], 1),
        q('Что делает метод querySelector?', ['Выбирает элемент по ID', 'Выбирает элемент по CSS-селектору', 'Удаляет элемент'], 1),
        q('Как вставить JavaScript в HTML?', ['<script>', '<js>', '<code>'], 0),
        q('Что такое localStorage?', ['Кэш браузера', 'Хранилище данных на клиенте', 'База данных'], 1),
        q('Какой метод делает асинхронный запрос?', ['send()', 'fetch()', 'connect()'], 1),
      ]

    case 'backend':
      return [
        q('Что такое REST API?', ['Протокол взаимодействия', 'SQL-запрос', 'ORM'], 0),
        q('Что делает метод POST?', ['Запрашивает данные', 'Удаляет данные', 'Создаёт новые данные'], 2),
        q('Что такое JWT?', ['Тип базы данных', 'Токен аутентификации', 'Фреймворк'], 1),
        q('Какой порт по умолчанию использует HTTP?', ['80', '443', '22'], 0),
        q('Что такое middleware?', ['База данных', 'Прослойка для обработки запросов', 'API-ключ'], 1),
        q('Какой код ответа означает "Успешно создано"?', ['200', '201', '404'], 1),
        q('Что делает ORM?', ['Серверный шаблонизатор', 'Работает с файлами', 'Позволяет работать с БД через объекты'], 2),
        q('Что такое Node.js?', ['Серверная среда для JS', 'Фронтенд фреймворк', 'Браузер'], 0),
        q('Какой модуль Node.js используется для HTTP-сервера?', ['http', 'fs', 'url'], 0),
        q('Что означает MVC?', ['Model-View-Controller', 'Multi-View-Container', 'Main Variable Context'], 0),
        q('Что такое CORS?', ['Система кэширования', 'Политика доступа между источниками', 'Алгоритм хэширования'], 1),
        q('Что делает метод PUT?', ['Добавляет новую строку', 'Полностью обновляет ресурс', 'Удаляет строку'], 1),
        q('Что такое status code 500?', ['ОК', 'Не найдено', 'Ошибка сервера'], 2),
        q('Какой формат обычно используется для API?', ['XML', 'CSV', 'JSON'], 2),
        q('Как называется объект запроса в Express.js?', ['req', 'request', 'res'], 0),
        q('Что такое cron в backend?', ['Событие на фронтенде', 'Планировщик задач', 'Библиотека анимаций'], 1),
        q('Что делает bcrypt?', ['Шифрует токены', 'Хэширует пароли', 'Создаёт JWT'], 1),
        q('Что означает NoSQL?', ['Базы данных без таблиц', 'SQL-запросы запрещены', 'База с большим объёмом'], 0),
        q('Что делает res.send()?', ['Вызывает ошибку', 'Отправляет ответ клиенту', 'Сохраняет файл'], 1),
        q('Как защитить API?', ['Сделать публичным', 'Добавить JWT и проверки прав', 'Записать в HTML'], 1),
      ]

    case 'базы данных':
      return [
        q('Что такое индекс в базе данных?', ['Ускорение поиска', 'Удаление данных', 'Резервное копирование'], 0),
        q('Что означает SQL?', ['Structured Query Language', 'Simple Question Logic', 'Server Query Level'], 0),
        q('Чем отличается LEFT JOIN от INNER JOIN?', ['LEFT JOIN возвращает все строки из левой таблицы', 'INNER JOIN объединяет по ID', 'LEFT JOIN удаляет дубликаты'], 0),
        q('Что делает команда SELECT?', ['Создаёт таблицу', 'Запрашивает данные', 'Удаляет базу'], 1),
        q('Что такое нормализация?', ['Удаление данных', 'Оптимизация структуры таблиц', 'Импорт CSV'], 1),
        q('Команда для добавления данных в таблицу:', ['INSERT INTO', 'ADD TO', 'SAVE'], 0),
        q('Что такое первичный ключ (PRIMARY KEY)?', ['Уникальный идентификатор строки', 'Связь с внешней таблицей', 'Таблица без столбцов'], 0),
        q('Чем отличается VARCHAR от TEXT?', ['VARCHAR ограничен по длине', 'TEXT быстрее', 'VARCHAR нельзя индексировать'], 0),
        q('Что делает команда UPDATE?', ['Обновляет существующие записи', 'Создаёт базу', 'Удаляет строку'], 0),
        q('Что делает WHERE в SQL?', ['Ограничивает выборку', 'Сортирует строки', 'Создаёт таблицу'], 0),
        q('Что делает команда DELETE?', ['Удаляет таблицу', 'Удаляет строки по условию', 'Добавляет колонку'], 1),
        q('Какой тип СУБД является реляционной?', ['MySQL', 'MongoDB', 'Redis'], 0),
        q('Что делает команда CREATE TABLE?', ['Создаёт новую таблицу', 'Обновляет данные', 'Очищает таблицу'], 0),
        q('Что такое транзакция?', ['Группа SQL-команд, исполняемых как единое целое', 'Отчёт по данным', 'Форма шифрования'], 0),
        q('Как задать внешний ключ (FOREIGN KEY)?', ['Через CONSTRAINT', 'Через SELECT', 'Через ORDER BY'], 0),
        q('Что делает команда DROP?', ['Удаляет объект базы данных', 'Запрашивает данные', 'Создаёт ключ'], 0),
        q('Что делает COUNT(*)?', ['Считает строки', 'Суммирует значения', 'Создаёт индекс'], 0),
        q('Что такое уникальный индекс?', ['Индекс без повторяющихся значений', 'Индекс на внешнем ключе', 'Автоинкремент'], 0),
        q('Какой формат используется для экспорта базы?', ['SQL dump', 'JPG', 'PDF'], 0),
        q('Что делает оператор LIKE?', ['Сравнивает строки по шаблону', 'Сортирует таблицу', 'Удаляет пробелы'], 0),
      ]

    case 'devops':
      return [
        q('Что такое CI/CD?', ['Непрерывная интеграция и доставка', 'Фреймворк для UI', 'Методология Agile'], 0),
        q('Для чего используется Docker?', ['Изоляция приложений в контейнерах', 'Разработка UI', 'Создание бэкапов'], 0),
        q('Что делает команда docker build?', ['Создаёт образ из Dockerfile', 'Удаляет контейнер', 'Запускает сервис'], 0),
        q('Что делает Kubernetes?', ['Оркестрация контейнеров', 'Мониторинг логов', 'Управление API'], 0),
        q('Что такое Jenkins?', ['CI/CD-сервер', 'Язык программирования', 'Система логирования'], 0),
        q('Что такое инфраструктура как код (IaC)?', ['Определение инфраструктуры через код', 'Кодирование интерфейса', 'Виртуализация памяти'], 0),
        q('Какой инструмент используется для IaC?', ['Terraform', 'JIRA', 'React'], 0),
        q('Что такое Helm?', ['Менеджер пакетов для Kubernetes', 'Система логирования', 'Редактор CI-пайплайнов'], 0),
        q('Что делает команда docker run?', ['Запускает контейнер', 'Создаёт образ', 'Обновляет систему'], 0),
        q('Что означает "scaling" в Kubernetes?', ['Масштабирование количества подов', 'Сжатие образа', 'Настройка API'], 0),
        q('Что такое pod в Kubernetes?', ['Наименьшая единица развёртывания', 'Конфигурация CI/CD', 'Бэкап базы'], 0),
        q('Что делает Prometheus?', ['Собирает и мониторит метрики', 'Запускает контейнеры', 'Создаёт бэкапы'], 0),
        q('Что такое Grafana?', ['Визуализация метрик и логов', 'CI/CD-консоль', 'Рендеринг веб-интерфейса'], 0),
        q('Что означает rollback в контексте CI/CD?', ['Откат к предыдущей стабильной версии', 'Удаление окружения', 'Создание тестов'], 0),
        q('Что такое Ansible?', ['Инструмент автоматизации конфигурации', 'Язык запросов', 'Фреймворк для логов'], 0),
        q('Что делает команда kubectl get pods?', ['Показывает список подов', 'Удаляет контейнер', 'Строит Dockerfile'], 0),
        q('Что означает blue-green deployment?', ['Метод развертывания с двумя окружениями', 'Цветовая схема графиков', 'Модель логирования'], 0),
        q('Какой файл используется для конфигурации CI в GitHub Actions?', ['.github/workflows/*.yml', 'ci.yaml', 'config.ini'], 0),
        q('Что делает команда terraform apply?', ['Применяет инфраструктурные изменения', 'Создаёт CI-джобу', 'Обновляет базу'], 0),
        q('Что такое логирование?', ['Запись событий приложения', 'Проверка кода', 'Шифрование данных'], 0),
      ]

    case 'ui/ux дизайн':
      return [
        q('Что такое UX-дизайн?', ['Проектирование пользовательского опыта', 'Программирование серверной логики', 'Настройка баз данных'], 0),
        q('Что означает UI?', ['Пользовательский интерфейс', 'Интернет-платформа', 'Устройство ввода'], 0),
        q('Для чего используется Figma?', ['Дизайн интерфейсов и прототипирование', 'Мониторинг серверов', 'Монтаж видео'], 0),
        q('Что такое wireframe?', ['Чёрно-белый каркас интерфейса', 'Стили CSS', 'Скрипт анимации'], 0),
        q('Что такое прототип в UX?', ['Интерактивный макет', 'Код приложения', 'Финальный дизайн'], 0),
        q('Что означает понятие "юзабилити"?', ['Удобство использования', 'Надёжность сервера', 'SEO-оптимизация'], 0),
        q('Что такое A/B тестирование?', ['Сравнение двух вариантов интерфейса', 'Бэкап базы данных', 'Рендеринг видео'], 0),
        q('Какая метрика относится к UX?', ['Time on Task', 'FPS', 'Load Balancing'], 0),
        q('Что означает "информационная архитектура"?', ['Структура контента и навигации', 'Сеть API', 'Дерево DOM'], 0),
        q('Что такое адаптивный дизайн?', ['Интерфейс под разные устройства', 'Гибкая база данных', 'Оптимизация кода'], 0),
        q('Для чего применяются персоналии (personas)?', ['Понимание целевой аудитории', 'Настройка шрифтов', 'Тестирование CI'], 0),
        q('Что такое карта пути пользователя (user journey map)?', ['График взаимодействия с продуктом', 'Файл маршрута в React', 'Схема сетевого запроса'], 0),
        q('Какой принцип относится к UI-дизайну?', ['Иерархия элементов', 'Глубина логирования', 'Плотность пикселей'], 0),
        q('Что такое модальный диалог?', ['Всплывающее окно с фокусом', 'Объект в базе данных', 'CI-джоба'], 0),
        q('Что важно при выборе цвета в интерфейсе?', ['Контраст и доступность', 'Формат файла', 'Тип соединения'], 0),
        q('Что означает “микроанимация” в UI?', ['Мелкие визуальные эффекты', 'Видео высокого качества', 'Микросервисное логирование'], 0),
        q('Что такое call to action (CTA)?', ['Элемент, побуждающий к действию', 'Серверная функция', 'Шаблон дизайна'], 0),
        q('Что такое responsive дизайн?', ['Гибкий дизайн под разные разрешения', 'Отзыв сервера', 'Ответ API'], 0),
        q('Зачем нужен пользовательский фидбек в UX?', ['Улучшение взаимодействия', 'Тестирование кода', 'Кеширование данных'], 0),
        q('Что означает правило “3 кликов”?', ['Пользователь должен достигать цели не более чем за 3 клика', 'Максимум 3 страницы в дизайне', '3 слоя логики в архитектуре'], 0),
      ]

    case 'графический дизайн':
      return [
        q('Что такое CMYK?', ['Цветовая модель для печати', 'Сетевой протокол', 'Формат видео'], 0),
        q('Для чего используется RGB?', ['Цвета для экранов', 'Цвета для принтера', 'Звук'], 0),
        q('Что такое векторная графика?', ['Графика, основанная на формулах и координатах', 'Пиксельное изображение', 'Фотография'], 0),
        q('Какой формат поддерживает прозрачность?', ['PNG', 'JPG', 'BMP'], 0),
        q('Что делает инструмент "Перо" в Adobe Illustrator?', ['Создаёт кривые и пути', 'Удаляет объекты', 'Рисует кистью'], 0),
        q('Что означает DPI?', ['Точек на дюйм', 'Длина изображения', 'Цветовой профиль'], 0),
        q('Что такое логотип?', ['Графический знак бренда', 'Файл стилей', 'Интерфейс API'], 0),
        q('Где используется формат SVG?', ['Векторная графика для веба', 'Аудио', 'Видео высокой чёткости'], 0),
        q('Что такое композиция в дизайне?', ['Расположение элементов на холсте', 'База данных', 'Цветовая модель'], 0),
        q('Какой принцип важен в типографике?', ['Контраст и читаемость', 'Скорость загрузки', 'Подключение API'], 0),
        q('Для чего применяют сетку (grid) в дизайне?', ['Выравнивание элементов', 'Настройка CI', 'Маршрутизация'], 0),
        q('Что такое монохромная палитра?', ['Один цвет с оттенками', 'Цвета радуги', 'RGB + CMYK'], 0),
        q('Что делает инструмент "Clone Stamp" в Photoshop?', ['Клонирует участки изображения', 'Меняет слои', 'Обрезает контур'], 0),
        q('Что такое negative space?', ['Пустое пространство вокруг объектов', 'Ошибки в дизайне', 'Запас по времени'], 0),
        q('Что важно при экспорте для печати?', ['CMYK и 300 DPI', 'MP3 и PNG', 'RGB и 72 DPI'], 0),
        q('Что делает слой-маска?', ['Скрывает часть слоя без удаления', 'Клонирует объект', 'Изменяет формат'], 0),
        q('Что такое kerning?', ['Интервал между буквами', 'Плотность пикселей', 'Скорость загрузки'], 0),
        q('Что такое мокап (mockup)?', ['Визуализация дизайна на объекте', 'Снимок экрана', 'Шрифт'], 0),
        q('Для чего нужен режим наложения (blend mode)?', ['Эффекты взаимодействия слоёв', 'Сжатие изображения', 'Сохранение в PNG'], 0),
        q('Что такое брендбук?', ['Свод правил оформления бренда', 'CMS-платформа', 'UI-фреймворк'], 0),
      ]

    case 'анимация и видео':
      return [
        q('Что такое keyframe в анимации?', ['Ключевой кадр, фиксирующий значение параметра во времени', 'Фильтр шумоподавления', 'Метод кодирования видео'], 0),
        q('FPS означает...', ['Кадров в секунду', 'Формат потоковой передачи', 'Плотность пикселей'], 0),
        q('Что делает easing (интерполяция скорости)?', ['Управляет ускорением и замедлением между кадрами', 'Изменяет цветовую гамму', 'Увеличивает резкость'], 0),
        q('Что такое motion blur?', ['Размытие при движении объекта', 'Размытие границ UI', 'Фильтр шумоподавления'], 0),
        q('Какая пара контейнер — кодек корректна?', ['MP4 — контейнер, H.264 — кодек', 'JPG — контейнер, MP3 — кодек', 'PNG — контейнер, AVI — кодек'], 0),
        q('Shutter angle 180° означает...', ['Экспозиция равна половине кадра — реалистичное размытие', 'Полный кадр — резкое изображение', 'Нет размытия вообще'], 0),
        q('Что такое proxy media?', ['Низкокачественные копии видео для быстрого редактирования', 'Файл субтитров', 'Исходный медиаконтент'], 0),
        q('VBR vs CBR — верно:', ['VBR распределяет битрейт в зависимости от сцены', 'CBR всегда более качественный', 'VBR запрещён для YouTube'], 0),
        q('Что делает bezier-кривая в анимации?', ['Контролирует плавность движения и параметров', 'Настраивает глубину резкости', 'Применяет цветовой фильтр'], 0),
        q('Для чего нужны safe areas?', ['Гарантия, что важное не будет обрезано на старых экранах', 'Защита от перезаписи файла', 'Контроль безопасности при экспорте'], 0),
        q('Что такое хрома сабсэмплинг 4:2:0?', ['Снижение цветового разрешения для компрессии', 'Полное отсутствие цвета', 'HDR формат изображения'], 0),
        q('Что означает RGB + Alpha при экспорте?', ['Изображение с прозрачностью', 'HDR-рендеринг', 'Монохромный вывод'], 0),
        q('Что такое секвенция изображений?', ['Набор кадров в виде отдельных файлов', 'Один сжатый видеофайл', 'ZIP-архив с картинками'], 0),
        q('Какой формат поддерживает альфу и высокую точность?', ['EXR', 'JPG', 'MP4'], 0),
        q('Что означает Rec.709?', ['Стандарт цветового пространства для SDR', 'Формат контейнера', 'Алгоритм сжатия'], 0),
        q('Что такое aspect ratio?', ['Соотношение сторон кадра', 'Скорость анимации', 'Глубина цвета'], 0),
        q('Зачем использовать LUT?', ['Цветокоррекция по заранее заданной таблице', 'Увеличение битрейта', 'Сглаживание краёв'], 0),
        q('Частота звука в видео обычно равна...', ['48 kHz', '96 Hz', '22.05 kHz'], 0),
        q('Что такое storyboard?', ['Последовательность кадров для предварительного просмотра сцены', 'Плагин для After Effects', 'Библиотека анимации'], 0),
        q('Что делает nesting в монтажной программе?', ['Вкладывает одну секвенцию в другую для группировки', 'Создаёт подпапки', 'Упаковывает проект в ZIP'], 0),
      ]

    case 'написание статей':
      return [
        q('Что такое H1 в HTML?', ['Основной заголовок страницы', 'Гиперссылка', 'Картинка'], 0),
        q('Что такое CTA?', ['Призыв к действию', 'Формат статьи', 'Техническое задание'], 0),
        q('Структура статьи включает...', ['Заголовок, вводную часть, основное тело, вывод', 'Код, дизайн, тесты', 'Заголовок и список'], 0),
        q('Что важно при написании SEO-статей?', ['Ключевые слова и читаемость', 'Минимум текста', 'Отсутствие заголовков'], 0),
        q('Что такое вода в тексте?', ['Лишняя и неинформативная информация', 'Визуальный стиль', 'Технические термины'], 0),
        q('Что делает заголовок цепляющим?', ['Интрига, польза, конкретика', 'Сложные слова', 'Сухая информация'], 0),
        q('Какой стиль предпочтителен для веб-статей?', ['Простой и разговорный', 'Сложный и академический', 'Юридический'], 0),
        q('Зачем использовать подзаголовки?', ['Для улучшения структуры и восприятия', 'Для SEO-тегов', 'Для цитат'], 0),
        q('Что такое уникальность текста?', ['Отсутствие плагиата', 'Отличие шрифта', 'Яркий цвет'], 0),
        q('Что значит "пиши, как говоришь"?', ['Используй естественный язык', 'Пиши устные диалоги', 'Добавляй голосовые сообщения'], 0),
        q('Какой инструмент помогает планировать статью?', ['Контент-план', 'FTP-клиент', 'Редактор кода'], 0),
        q('Что такое фактчекинг?', ['Проверка достоверности информации', 'Форматирование текста', 'Перевод статьи'], 0),
        q('Что такое метафора в тексте?', ['Образное сравнение', 'Факт', 'Цитата'], 0),
        q('Что помогает удерживать внимание читателя?', ['Короткие абзацы и интересный ритм', 'Сложные термины', 'Пассивный залог'], 0),
        q('Что такое лонгрид?', ['Длинная и глубоко проработанная статья', 'PDF-документ', 'Книга'], 0),
        q('Зачем нужны примеры в статье?', ['Для наглядности и доверия', 'Для объёма', 'Для SEO'], 0),
        q('Что важно в вводной части?', ['Показать проблему или заинтересовать', 'Сразу писать выводы', 'Цитировать Википедию'], 0),
        q('Что такое call to action (CTA)?', ['Призыв к действию читателя', 'Название заголовка', 'Тип статьи'], 0),
        q('Что такое тошнота текста?', ['Частота ключевых слов', 'Частота глаголов', 'Глубина смыслов'], 0),
        q('Для чего используются буллеты (маркеры)?', ['Для структурирования списка', 'Для цитат', 'Для выделения заголовков'], 0),
      ]

    case 'редактирование':
      return [
        q('Что делает редактор?', ['Исправляет и улучшает текст', 'Создаёт дизайн', 'Пишет код'], 0),
        q('Что такое корректура?', ['Поиск и исправление ошибок', 'Создание заголовков', 'Анализ темы'], 0),
        q('Орфография — это...', ['Правильное написание слов', 'Тип шрифта', 'Содержание статьи'], 0),
        q('Что такое стилистика текста?', ['Манера и стиль изложения', 'Грамматическая структура', 'Длина предложений'], 0),
        q('Редактирование включает...', ['Орфографию, пунктуацию, стилистику', 'Код и сборку', 'Дизайн и верстку'], 0),
        q('Зачем нужны синонимы при редактировании?', ['Для избегания повторов', 'Для украшения текста', 'Для форматирования'], 0),
        q('Какой тип ошибок ищет корректор?', ['Орфографические и пунктуационные', 'Сюжетные', 'Графические'], 0),
        q('Что значит «плотность текста»?', ['Кол-во информации на объём', 'Вес файла', 'Размер шрифта'], 0),
        q('Что такое тавтология?', ['Повторение одинаковых слов', 'Сложные термины', 'Синонимы'], 0),
        q('Для чего использовать редакторские пометки?', ['Для обозначения правок', 'Для выделения заголовков', 'Для вставки ссылок'], 0),
        q('Что означает «чистый текст»?', ['Без лишних элементов и ошибок', 'Без абзацев', 'С HTML-тегами'], 0),
        q('Проверка фактов — это задача...', ['Редактора', 'Автора', 'Дизайнера'], 0),
        q('Что такое канцелярит?', ['Официально-бюрократический стиль', 'Фантастический жанр', 'Набор HTML-атрибутов'], 0),
        q('Как редактировать цитаты?', ['Сохранять точность, оформлять корректно', 'Переписывать под себя', 'Добавлять свои слова'], 0),
        q('Что означает «структурное редактирование»?', ['Работа с логикой и порядком частей текста', 'Исправление грамматических ошибок', 'Изменение шрифта'], 0),
        q('Что такое «вода» в тексте?', ['Лишняя, неинформативная часть', 'Вступление', 'Цитата'], 0),
        q('Когда нужно использовать запятую?', ['При вводных словах и сложных предложениях', 'Всегда перед глаголом', 'Только перед “и”'], 0),
        q('Что означает «согласование времен»?', ['Соблюдение логики глаголов во времени', 'Выбор шрифта', 'Расположение текста'], 0),
        q('Что такое стиль изложения?', ['Форма подачи информации', 'Расположение картинок', 'Тип страницы'], 0),
        q('Зачем делать вычитку текста вслух?', ['Для выявления шероховатостей', 'Для увеличения тошноты', 'Для SEO'], 0),
      ]

    case 'сценарии':
      return [
        q('Что такое логлайн?', ['Краткое описание сюжета в одном предложении', 'Название сцены', 'Финальная реплика'], 0),
        q('Трёхактная структура включает...', ['Завязку, развитие, развязку', 'Пролог, эпилог, сцена', 'Заголовок, подзаголовок, текст'], 0),
        q('Что такое сцена?', ['Минимальная единица действия в сценарии', 'Имя героя', 'Операторский приём'], 0),
        q('Диалог — это...', ['Реплики персонажей', 'Техническое описание', 'Режиссёрская ремарка'], 0),
        q('Что такое конфликт в сценарии?', ['Противоречие, движущее сюжет', 'Ошибка в диалоге', 'Монтажный переход'], 0),
        q('Что такое герой с дугой развития?', ['Персонаж, который меняется по ходу сюжета', 'Главный антагонист', 'Второстепенный персонаж'], 0),
        q('Что такое сеттинг?', ['Место и время действия истории', 'Мелодия титров', 'Язык диалогов'], 0),
        q('Флешбек — это...', ['Сцена из прошлого', 'Футуристическая сцена', 'Набор действий'], 0),
        q('Что такое кульминация?', ['Наивысшая точка напряжения', 'Начало фильма', 'Заключительные титры'], 0),
        q('Что такое антагонист?', ['Противник главного героя', 'Союзник', 'Нейтральный наблюдатель'], 0),
        q('Что делает сценарная ремарка?', ['Описывает действия, обстановку', 'Вводит нового героя', 'Указывает место'], 0),
        q('Что такое “сетап и пейофф”?', ['Завязка и её реализация позже в сюжете', 'Съёмка и монтаж', 'Диалог и мизансцена'], 0),
        q('Что означает “шоу, не рассказывай”?', ['Показывать через действия, а не объяснять словами', 'Сокращать сюжет', 'Упрощать текст'], 0),
        q('Что такое пилотный эпизод?', ['Первая серия для презентации', 'Финальная серия', 'Средняя сцена'], 0),
        q('Что делает сценарист?', ['Создаёт структуру и текст для фильма/сериала', 'Снимает видео', 'Пишет рецензии'], 0),
        q('Как обозначается диалог в сценарии?', ['Именем героя и репликой ниже', 'С курсивом', 'С заглавной сцены'], 0),
        q('Что такое жанр в сценарии?', ['Тип истории: комедия, драма и т.п.', 'Имя персонажа', 'Тип шрифта'], 0),
        q('Что делает клиффхэнгер?', ['Оставляет интригу в конце сцены или серии', 'Решает конфликт', 'Вводит героя'], 0),
        q('Что означает «бит» в сценарии?', ['Мини-событие, изменяющее ход сцены', 'Тип шрифта', 'Фоновая музыка'], 0),
        q('Что делает экшн-линия?', ['Описывает действия без диалогов', 'Обозначает звуки', 'Добавляет субтитры'], 0),
      ]

    default:
      return []
  }
}
