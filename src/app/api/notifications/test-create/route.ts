// src/app/api/notifications/test-create/route.ts
// –¢–µ—Å—Ç–æ–≤—ã–π endpoint –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
import { getUserFromRequest } from '@/lib/auth'
import { createNotification } from '@/lib/notify'
import { NextRequest, NextResponse } from 'next/server'
import { sendNotificationToUser } from '../../notifications/stream/route'

export const runtime = 'nodejs'
export const dynamic = 'force-dynamic'

export async function POST(req: NextRequest) {
	const user = await getUserFromRequest(req)
	if (!user) {
		return NextResponse.json({ error: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' }, { status: 401 })
	}

	try {
		console.log('üß™ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user.id)

		// –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –ë–î
		const notification = await createNotification({
			userId: user.id,
			message: `–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç ${new Date().toLocaleTimeString()}`,
			link: '/test-notifications',
			type: 'test',
		})

		console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ –≤ –ë–î:', notification)

		// –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ SSE
		const sseSent = sendNotificationToUser(user.id, {
			type: 'test',
			title: '–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
			message: notification.message,
			link: notification.link,
			timestamp: notification.createdAt.toISOString(),
			playSound: true,
		})

		console.log('üì° SSE –æ—Ç–ø—Ä–∞–≤–∫–∞:', sseSent ? '—É—Å–ø–µ—à–Ω–æ' : '–Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω')

		return NextResponse.json({
			success: true,
			notification,
			sseSent,
			message: sseSent
				? '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ SSE'
				: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –ë–î, SSE –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω (–±—É–¥–µ—Ç –ø–æ–ª—É—á–µ–Ω–æ —á–µ—Ä–µ–∑ polling)',
		})
	} catch (error: any) {
		console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error)
		return NextResponse.json(
			{ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞', details: error.message },
			{ status: 500 }
		)
	}
}

