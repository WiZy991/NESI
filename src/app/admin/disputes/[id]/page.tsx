import { prisma } from "@/lib/prisma";
import { notFound, redirect } from "next/navigation";
import Link from "next/link";

interface Props {
  params: { id: string };
}

export default async function DisputeDetailsPage({ params }: Props) {
  const dispute = await prisma.dispute.findUnique({
    where: { id: params.id },
    include: {
      task: {
        select: {
          id: true,
          title: true,
          status: true,
          customer: { select: { id: true, fullName: true, email: true } },
          executor: { select: { id: true, fullName: true, email: true } },
          messages: {
            orderBy: { createdAt: "asc" },
            include: {
              sender: {
                select: { id: true, fullName: true, email: true, role: true },
              },
            },
          },
        },
      },
      user: { select: { id: true, fullName: true, email: true } },
    },
  });

  if (!dispute) return notFound();

  // ‚úÖ –°–µ—Ä–≤–µ—Ä–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
  async function resolveDispute(formData: FormData) {
    "use server";

    const decision = formData.get("decision") as string; // "customer" | "executor"
    const resolution = formData.get("resolution") as string;

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–æ—Ä
    await prisma.dispute.update({
      where: { id: dispute.id },
      data: {
        status: "resolved",
        resolution: resolution || "",
        resolvedAt: new Date(),
        adminDecision: decision,
      },
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–¥–∞—á—É
    if (decision === "customer") {
      await prisma.task.update({
        where: { id: dispute.task.id },
        data: { status: "cancelled" },
      });
    } else if (decision === "executor") {
      await prisma.task.update({
        where: { id: dispute.task.id },
        data: { status: "completed" },
      });
    }

    // üöÄ –í–æ–∑–≤—Ä–∞—Ç –≤ —Å–ø–∏—Å–æ–∫ —Å–ø–æ—Ä–æ–≤
    redirect("/admin/disputes");
  }

  return (
    <div className="text-white">
      <h1 className="text-2xl font-bold mb-4">
        –°–ø–æ—Ä #{dispute.id.slice(0, 8)}
      </h1>

      {/* üß± –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="bg-gray-900 p-4 rounded-lg border border-gray-800 mb-6">
        <p>
          <span className="text-gray-400">–°—Ç–∞—Ç—É—Å:</span>{" "}
          <span
            className={`font-semibold ${
              dispute.status === "open"
                ? "text-yellow-400"
                : dispute.status === "resolved"
                ? "text-green-400"
                : "text-red-400"
            }`}
          >
            {dispute.status}
          </span>
        </p>
        <p>
          <span className="text-gray-400">–°–æ–∑–¥–∞–Ω:</span>{" "}
          {new Date(dispute.createdAt).toLocaleString()}
        </p>
        {dispute.resolvedAt && (
          <p>
            <span className="text-gray-400">–†–µ—à—ë–Ω:</span>{" "}
            {new Date(dispute.resolvedAt).toLocaleString()}
          </p>
        )}
      </div>

      {/* üß© –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–¥–∞—á–µ */}
      <div className="bg-gray-900 p-4 rounded-lg border border-gray-800 mb-6">
        <h2 className="text-lg font-semibold mb-2">–ó–∞–¥–∞—á–∞</h2>
        <p className="text-gray-300">
          <Link
            href={`/admin/tasks/${dispute.task.id}`}
            className="text-blue-400 hover:underline"
          >
            {dispute.task.title}
          </Link>
        </p>
        <p className="text-sm text-gray-400">–°—Ç–∞—Ç—É—Å: {dispute.task.status}</p>
      </div>

      {/* üë§ –ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä —Å–ø–æ—Ä–∞ */}
      <div className="bg-gray-900 p-4 rounded-lg border border-gray-800 mb-6">
        <h2 className="text-lg font-semibold mb-2">–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä —Å–ø–æ—Ä–∞</h2>
        <p>{dispute.user.fullName || "‚Äî"}</p>
        <p className="text-gray-400">{dispute.user.email}</p>
        <Link
          href={`/admin/users/${dispute.user.id}`}
          className="text-blue-400 hover:underline text-sm"
        >
          –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å ‚Üí
        </Link>
      </div>

      {/* üìÑ –ü—Ä–∏—á–∏–Ω–∞ */}
      <div className="bg-gray-900 p-4 rounded-lg border border-gray-800 mb-6">
        <h2 className="text-lg font-semibold mb-2">–ü—Ä–∏—á–∏–Ω–∞ —Å–ø–æ—Ä–∞</h2>
        <p className="text-gray-300 whitespace-pre-line">{dispute.reason}</p>
        {dispute.details && (
          <>
            <h3 className="text-gray-400 mt-3 mb-1 text-sm">
              –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏:
            </h3>
            <p className="text-gray-400 text-sm">{dispute.details}</p>
          </>
        )}
      </div>

      {/* üí¨ –ß–∞—Ç –ø–æ –∑–∞–¥–∞—á–µ */}
      <div className="bg-gray-900 p-4 rounded-lg border border-gray-800 mb-6">
        <h2 className="text-lg font-semibold mb-2">–ß–∞—Ç –ø–æ –∑–∞–¥–∞—á–µ</h2>
        {dispute.task.messages.length === 0 ? (
          <p className="text-gray-500 text-sm">–°–æ–æ–±—â–µ–Ω–∏–π –Ω–µ—Ç</p>
        ) : (
          <div className="space-y-3 max-h-[400px] overflow-y-auto p-2 bg-gray-950 rounded-lg">
            {dispute.task.messages.map((m) => (
              <div key={m.id} className="border-b border-gray-800 pb-2">
                <p className="text-sm text-gray-400">
                  <span className="font-semibold text-gray-200">
                    {m.sender.fullName || m.sender.email}
                  </span>{" "}
                  <span className="text-xs text-gray-500">
                    ({m.sender.role})
                  </span>
                </p>
                <p className="text-gray-300 mt-1">{m.content}</p>
                <p className="text-xs text-gray-600">
                  {new Date(m.createdAt).toLocaleString()}
                </p>
              </div>
            ))}
          </div>
        )}
      </div>

      {/* ‚öñÔ∏è –†–µ—à–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ */}
      {dispute.status === "open" ? (
        <form
          action={resolveDispute}
          className="bg-gray-900 p-4 rounded-lg border border-gray-800"
        >
          <h2 className="text-lg font-semibold mb-3 text-emerald-400">
            –†–µ—à–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
          </h2>

          <div className="flex flex-col gap-2 mb-4">
            <label className="flex items-center gap-2">
              <input
                type="radio"
                name="decision"
                value="customer"
                className="accent-emerald-500"
                required
              />
              –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∑–∞–∫–∞–∑—á–∏–∫–∞
            </label>
            <label className="flex items-center gap-2">
              <input
                type="radio"
                name="decision"
                value="executor"
                className="accent-blue-500"
                required
              />
              –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
            </label>
          </div>

          <textarea
            name="resolution"
            placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞..."
            className="w-full p-2 rounded bg-gray-800 text-gray-100 border border-gray-700 mb-3"
            rows={3}
          />

          <button
            type="submit"
            className="px-4 py-2 bg-emerald-700 hover:bg-emerald-800 rounded text-white font-medium"
          >
            ‚úÖ –ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ
          </button>
        </form>
      ) : (
        <div className="bg-gray-900 p-4 rounded-lg border border-gray-800">
          <h2 className="text-lg font-semibold mb-2 text-green-400">
            ‚úÖ –°–ø–æ—Ä —Ä–µ—à—ë–Ω
          </h2>
          <p className="text-gray-300 mb-2">
            –†–µ—à–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:{" "}
            <span className="font-semibold text-emerald-400">
              {dispute.adminDecision === "customer"
                ? "–≤ –ø–æ–ª—å–∑—É –∑–∞–∫–∞–∑—á–∏–∫–∞"
                : "–≤ –ø–æ–ª—å–∑—É –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è"}
            </span>
          </p>
          {dispute.resolution && (
            <p className="text-gray-400 text-sm italic">
              ¬´{dispute.resolution}¬ª
            </p>
          )}
        </div>
      )}
    </div>
  );
}
