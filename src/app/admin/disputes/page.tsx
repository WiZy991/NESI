// ‚úÖ src/app/admin/disputes/page.tsx
export const dynamic = 'force-dynamic' // üî• –û—Ç–∫–ª—é—á–∞–µ—Ç –ø—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥, —Ä–µ—à–∞–µ—Ç –æ—à–∏–±–∫—É –ø—Ä–∏ –±–∏–ª–¥–µ

import { prisma } from '@/lib/prisma'
import Link from 'next/link'

export default async function AdminDisputesPage() {
	let disputes = []

	try {
		disputes = await (prisma as any).dispute.findMany({
			include: {
				Task: { select: { id: true, title: true } },
				User: { select: { id: true, fullName: true, email: true } },
			},
			orderBy: { createdAt: 'desc' },
		})
	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø–æ—Ä–æ–≤:', error)
		return (
			<div>
				<h1 className='text-3xl font-bold text-emerald-400 mb-4 flex items-center gap-2'>
					<span className='text-4xl'>‚öñÔ∏è</span>
					–°–ø–æ—Ä—ã
				</h1>
				<div className='p-8 text-center bg-red-500/10 border border-red-500/30 rounded-xl'>
					<p className='text-red-400 text-lg'>
						‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.
					</p>
				</div>
			</div>
		)
	}

	return (
		<div>
			<div className='mb-6'>
				<h1 className='text-3xl font-bold text-emerald-400 mb-2 flex items-center gap-2'>
					<span className='text-4xl'>‚öñÔ∏è</span>
					–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ø–æ—Ä–∞–º–∏
				</h1>
				<p className='text-gray-400 text-sm'>–í—Å–µ–≥–æ —Å–ø–æ—Ä–æ–≤: {disputes.length}</p>
			</div>

			{disputes.length === 0 ? (
				<div className='p-12 text-center bg-black/40 border border-emerald-500/20 rounded-xl'>
					<p className='text-gray-400 text-lg'>
						‚úÖ –ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Å–ø–æ—Ä–æ–≤ ‚Äî –∑–Ω–∞—á–∏—Ç –≤—Å—ë —Å–ø–æ–∫–æ–π–Ω–æ!
					</p>
				</div>
			) : (
				<div className='bg-black/40 border border-emerald-500/20 rounded-xl overflow-hidden shadow-[0_0_20px_rgba(16,185,129,0.1)]'>
					<div className='overflow-x-auto'>
						<table className='w-full text-sm'>
							<thead>
								<tr className='bg-emerald-900/20 border-b border-emerald-500/20'>
									<th className='p-4 text-left text-emerald-400 font-semibold'>
										–ó–∞–¥–∞—á–∞
									</th>
									<th className='p-4 text-left text-emerald-400 font-semibold'>
										–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
									</th>
									<th className='p-4 text-left text-emerald-400 font-semibold'>
										–ü—Ä–∏—á–∏–Ω–∞
									</th>
									<th className='p-4 text-left text-emerald-400 font-semibold'>
										–û–ø–∏—Å–∞–Ω–∏–µ
									</th>
									<th className='p-4 text-center text-emerald-400 font-semibold'>
										–°—Ç–∞—Ç—É—Å
									</th>
									<th className='p-4 text-center text-emerald-400 font-semibold'>
										–î–µ–π—Å—Ç–≤–∏—è
									</th>
								</tr>
							</thead>
							<tbody>
								{disputes.map((d: any) => (
									<tr
										key={d.id}
										className='border-t border-gray-800 hover:bg-emerald-500/5 transition'
									>
										<td className='p-4'>
											<Link
												href={`/admin/tasks/${d.Task.id}`}
												className='text-emerald-400 hover:text-emerald-300 hover:underline font-medium'
											>
												{d.Task.title}
											</Link>
										</td>
										<td className='p-4 text-gray-300'>
											<div>
												<div className='font-medium'>
													{d.User.fullName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}
												</div>
												<div className='text-xs text-gray-500'>
													{d.User.email}
												</div>
											</div>
										</td>
										<td className='p-4'>
											<span className='text-red-400 font-medium'>
												{d.reason}
											</span>
										</td>
										<td
											className='p-4 text-gray-300 max-w-xs truncate'
											title={d.details || '‚Äî'}
										>
											{d.details || (
												<span className='text-gray-500 italic'>
													–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è
												</span>
											)}
										</td>
										<td className='p-4 text-center'>
											{d.status === 'open' ? (
												<span className='inline-block px-3 py-1 rounded-lg bg-yellow-500/20 text-yellow-400 border border-yellow-500/30 text-xs font-medium'>
													–û—Ç–∫—Ä—ã—Ç
												</span>
											) : d.status === 'resolved' ? (
												<span className='inline-block px-3 py-1 rounded-lg bg-emerald-500/20 text-emerald-400 border border-emerald-500/30 text-xs font-medium'>
													–†–µ—à—ë–Ω
												</span>
											) : d.status === 'rejected' ? (
												<span className='inline-block px-3 py-1 rounded-lg bg-red-500/20 text-red-400 border border-red-500/30 text-xs font-medium'>
													–û—Ç–∫–ª–æ–Ω—ë–Ω
												</span>
											) : (
												<span className='inline-block px-3 py-1 rounded-lg bg-gray-500/20 text-gray-400 border border-gray-500/30 text-xs font-medium'>
													{d.status}
												</span>
											)}
										</td>
										<td className='p-4 text-center'>
											<Link
												href={`/admin/disputes/${d.id}`}
												className='inline-block px-4 py-2 bg-blue-600/80 hover:bg-blue-600 rounded-lg text-white text-xs transition font-medium'
											>
												üëÅ –û—Ç–∫—Ä—ã—Ç—å
											</Link>
										</td>
									</tr>
								))}
							</tbody>
						</table>
					</div>
				</div>
			)}
		</div>
	)
}
