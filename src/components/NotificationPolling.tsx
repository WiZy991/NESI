// src/components/NotificationPolling.tsx
// Fallback –¥–ª—è production –æ–∫—Ä—É–∂–µ–Ω–∏—è –≥–¥–µ SSE –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
'use client'

import { useEffect, useRef } from 'react'

interface NotificationPollingProps {
	userId: string
	token: string
	onNotification: (notification: any) => void
	enabled: boolean // –≤–∫–ª—é—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ SSE –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
	interval?: number // –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ–ø—Ä–æ—Å–∞ –≤ –º—Å (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 5 —Å–µ–∫—É–Ω–¥)
}

export function NotificationPolling({
	userId,
	token,
	onNotification,
	enabled,
	interval = 5000,
}: NotificationPollingProps) {
	const lastCheckRef = useRef<Date>(new Date())
	const onNotificationRef = useRef(onNotification)

	// –û–±–Ω–æ–≤–ª—è–µ–º ref –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ onNotification, –Ω–æ –Ω–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º useEffect
	useEffect(() => {
		onNotificationRef.current = onNotification
	}, [onNotification])

	useEffect(() => {
		if (!enabled || !userId || !token) {
			console.log('üîï Polling –æ—Ç–∫–ª—é—á–µ–Ω (enabled:', enabled, 'userId:', !!userId, 'token:', !!token, ')')
			return
		}

		console.log('üì° –ó–∞–ø—É—Å–∫ polling –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–∏–Ω—Ç–µ—Ä–≤–∞–ª:', interval, '–º—Å, userId:', userId, ')')

		const checkNotifications = async () => {
			try {
				const since = lastCheckRef.current.toISOString()
				const url = `/api/notifications/poll?since=${since}`
				
				console.log('üì° Polling –∑–∞–ø—Ä–æ—Å:', url)
				
				const response = await fetch(url, {
					headers: {
						Authorization: `Bearer ${token}`,
					},
				})

				console.log('üìä Polling –æ—Ç–≤–µ—Ç:', response.status, response.statusText)

				if (!response.ok) {
					const errorText = await response.text()
					console.error('‚ùå –û—à–∏–±–∫–∞ polling:', response.status, errorText)
					return
				}

				const data = await response.json()
				console.log('üì¶ Polling –¥–∞–Ω–Ω—ã–µ:', data)

				if (data.notifications && data.notifications.length > 0) {
					console.log('üì¨ –ü–æ–ª—É—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ polling:', data.notifications.length)
					
					data.notifications.forEach((notification: any) => {
						console.log('üì® –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', notification)
						onNotificationRef.current(notification)
					})

					lastCheckRef.current = new Date()
				} else {
					console.log('üì≠ –ù–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ—Ç')
				}
			} catch (error) {
				console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ polling —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error)
			}
		}

		// –ü–µ—Ä–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–∞–∑—É
		console.log('üöÄ –ü–µ—Ä–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ polling...')
		checkNotifications()

		// –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
		const intervalId = setInterval(() => {
			console.log('‚è∞ –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ polling...')
			checkNotifications()
		}, interval)

		return () => {
			console.log('üßπ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ polling')
			clearInterval(intervalId)
		}
	}, [userId, token, enabled, interval])

	return null // –≠—Ç–æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏—Ç UI
}

