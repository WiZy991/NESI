// src/components/NotificationPolling.tsx
// Fallback –¥–ª—è production –æ–∫—Ä—É–∂–µ–Ω–∏—è –≥–¥–µ SSE –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
'use client'

import { useEffect, useRef } from 'react'

interface NotificationPollingProps {
	userId: string
	token: string
	onNotification: (notification: any) => void
	enabled: boolean // –≤–∫–ª—é—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ SSE –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
	interval?: number // –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ–ø—Ä–æ—Å–∞ –≤ –º—Å (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 5 —Å–µ–∫—É–Ω–¥)
}

export function NotificationPolling({
	userId,
	token,
	onNotification,
	enabled,
	interval = 5000,
}: NotificationPollingProps) {
	const lastCheckRef = useRef<Date>(new Date())

	useEffect(() => {
		if (!enabled || !userId || !token) {
			console.log('üîï Polling –æ—Ç–∫–ª—é—á–µ–Ω')
			return
		}

		console.log('üì° –ó–∞–ø—É—Å–∫ polling –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–∏–Ω—Ç–µ—Ä–≤–∞–ª:', interval, '–º—Å)')

		const checkNotifications = async () => {
			try {
				const response = await fetch(
					`/api/notifications/poll?since=${lastCheckRef.current.toISOString()}`,
					{
						headers: {
							Authorization: `Bearer ${token}`,
						},
					}
				)

				if (!response.ok) {
					console.error('‚ùå –û—à–∏–±–∫–∞ polling:', response.status)
					return
				}

				const data = await response.json()

				if (data.notifications && data.notifications.length > 0) {
					console.log('üì¨ –ü–æ–ª—É—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ polling:', data.notifications.length)
					
					data.notifications.forEach((notification: any) => {
						onNotification(notification)
					})

					lastCheckRef.current = new Date()
				}
			} catch (error) {
				console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ polling —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error)
			}
		}

		// –ü–µ—Ä–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–∞–∑—É
		checkNotifications()

		// –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
		const intervalId = setInterval(checkNotifications, interval)

		return () => {
			console.log('üßπ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ polling')
			clearInterval(intervalId)
		}
	}, [userId, token, enabled, interval, onNotification])

	return null // –≠—Ç–æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏—Ç UI
}

