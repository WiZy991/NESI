// src/components/ResponseForm.tsx
'use client'

import { useState } from 'react'
import { toast } from 'sonner'
import { useUser } from '@/context/UserContext'

export default function ResponseForm({
  taskId,
  minPrice = 0,
  isCertified = true, // üëà –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é true, –Ω–æ TaskDetailPageContent –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ—Ç false
  subcategoryId,
}: {
  taskId: string
  minPrice?: number
  isCertified?: boolean
  subcategoryId?: string
}) {
  const { token } = useUser()
  const [message, setMessage] = useState('')
  const [price, setPrice] = useState('')
  const [loading, setLoading] = useState(false)

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()

    if (!token) return toast.error('–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã')
    if (!isCertified) return toast.error('–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é')

    if (!message || !price) return toast.error('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ü–µ–Ω—É')

    const parsedPrice = parseInt(price)
    if (Number.isNaN(parsedPrice)) return toast.error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞')
    if (parsedPrice < minPrice) return toast.error(`–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ‚Äî ${minPrice}‚ÇΩ`)

    const payload = { message, price: parsedPrice }
    setLoading(true)
    try {
      const res = await fetch(`/api/tasks/${taskId}/responses`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${token}`,
        },
        body: JSON.stringify(payload),
      })

      const text = await res.text()
      if (!res.ok) {
        try {
          const data = JSON.parse(text)
          if (res.status === 403 && data?.error?.includes('—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é')) {
            toast.error('–î–ª—è –æ—Ç–∫–ª–∏–∫–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ–π—Ç–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é')
          } else {
            toast.error(data?.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–∏–∫–µ')
          }
        } catch {
          toast.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–∏–∫–µ')
        }
        return
      }

      toast.success('–û—Ç–∫–ª–∏–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω')
      window.location.reload()
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', err)
      toast.error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏')
    } finally {
      setLoading(false)
    }
  }

  return (
    <form onSubmit={handleSubmit} className="mt-6 border-t border-gray-700 pt-4">
      <h2 className="text-lg font-semibold mb-2">–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è</h2>

      {!isCertified && (
        <div className="mb-3 p-2 rounded bg-red-900/40 border border-red-700 text-red-300 text-sm">
          –î–ª—è –æ—Ç–∫–ª–∏–∫–∞ –Ω–∞ —ç—Ç—É –∑–∞–¥–∞—á—É –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏{' '}
          <a
            href={`/certifications/${subcategoryId}`}
            className="underline hover:text-red-200"
          >
            —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –ø–æ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ‚Üí
          </a>
        </div>
      )}

      <textarea
        value={message}
        onChange={(e) => setMessage(e.target.value)}
        placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"
        disabled={!isCertified}
        className={`w-full p-2 rounded bg-gray-800 border border-gray-600 text-sm mb-2 ${
          !isCertified ? 'cursor-not-allowed opacity-50' : ''
        }`}
      />

      <input
        type="number"
        value={price}
        onChange={(e) => setPrice(e.target.value)}
        placeholder="–¶–µ–Ω–∞"
        disabled={!isCertified}
        className={`w-full p-2 rounded bg-gray-800 border border-gray-600 text-sm mb-1 ${
          !isCertified ? 'cursor-not-allowed opacity-50' : ''
        }`}
      />

      {minPrice > 0 && (
        <p className="text-sm text-gray-400 mb-2">
          üí° –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: <b>{minPrice}‚ÇΩ</b>
        </p>
      )}

      <button
        type="submit"
        disabled={
          loading ||
          !isCertified ||
          (!!price && parseInt(price) < (minPrice || 0))
        }
        className="bg-blue-600 hover:bg-blue-700 text-white text-sm px-4 py-2 rounded disabled:opacity-50"
      >
        {loading ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è'}
      </button>
    </form>
  )
}
