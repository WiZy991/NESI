// src/lib/categoryCache.ts
// In-memory –∫–µ—à –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π

import prisma from './prisma'

const CACHE_TTL = 60 * 60 * 1000 // 1 —á–∞—Å

interface CachedData<T> {
	data: T
	timestamp: number
}

let categoriesCache: CachedData<any> | null = null
let subcategoriesCache: CachedData<any> | null = null

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
 */
export async function getCachedCategories() {
	const now = Date.now()

	// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–µ—à
	if (categoriesCache && now - categoriesCache.timestamp < CACHE_TTL) {
		console.log('‚úÖ Categories from cache')
		return categoriesCache.data
	}

	console.log('üîÑ Fetching categories from DB')

	// –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ –ë–î
	const categories = await prisma.category.findMany({
		select: {
			id: true,
			name: true,
			subcategories: {
				select: {
					id: true,
					name: true,
					minPrice: true,
				},
				orderBy: { name: 'asc' },
			},
		},
		orderBy: { name: 'asc' },
	})

	// –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∫–µ—à
	categoriesCache = {
		data: categories,
		timestamp: now,
	}

	return categories
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º
 */
export async function getCachedSubcategories() {
	const now = Date.now()

	// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–µ—à
	if (subcategoriesCache && now - subcategoriesCache.timestamp < CACHE_TTL) {
		console.log('‚úÖ Subcategories from cache')
		return subcategoriesCache.data
	}

	console.log('üîÑ Fetching subcategories from DB')

	// –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ –ë–î
	const subcategories = await prisma.subcategory.findMany({
		select: {
			id: true,
			name: true,
			minPrice: true,
			categoryId: true,
			category: {
				select: {
					id: true,
					name: true,
				},
			},
		},
		orderBy: { name: 'asc' },
	})

	// –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∫–µ—à
	subcategoriesCache = {
		data: subcategories,
		timestamp: now,
	}

	return subcategories
}

/**
 * –ò–Ω–≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –∫–µ—à –∫–∞—Ç–µ–≥–æ—Ä–∏–π
 * –í—ã–∑—ã–≤–∞—Ç—å –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏/—É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
 */
export function invalidateCategoryCache() {
	console.log('üóëÔ∏è  Invalidating category cache')
	categoriesCache = null
	subcategoriesCache = null
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–µ—à–∞
 */
export function getCacheStats() {
	const now = Date.now()

	return {
		categories: {
			cached: !!categoriesCache,
			age: categoriesCache
				? Math.round((now - categoriesCache.timestamp) / 1000)
				: null,
			ttl: CACHE_TTL / 1000,
		},
		subcategories: {
			cached: !!subcategoriesCache,
			age: subcategoriesCache
				? Math.round((now - subcategoriesCache.timestamp) / 1000)
				: null,
			ttl: CACHE_TTL / 1000,
		},
	}
}
